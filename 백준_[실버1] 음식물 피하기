from collections import deque
import sys
input = sys.stdin.readline

n, m, k = map(int, input().split())

dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]


def bfs(x, y):
    queue = deque()
    queue.append((x, y))

    global cnt

    while queue:
        a, b = queue.popleft()
        for i in range(4):
            nx = a + dx[i]
            ny = b + dy[i]

            if nx < 0 or nx >= n or ny < 0 or ny >= m:
                continue

            elif graph[nx][ny] == 1:
                graph[nx][ny] = 0
                cnt += 1
                queue.append((nx, ny))
    return cnt



# 지도 완성(1이 쓰레기가 있는 곳)
graph = [[0] * m for _ in range(n)]

for _ in range(k):
    r, c = map(int, input().split())
    graph[r-1][c-1] = 1


max_cnt = 0


## 매번 카운트 0으로 초기화.
for i in range(n):
    for j in range(m):
        if graph[i][j] == 1:
            cnt = 0
            bfs(i, j)

            if cnt > max_cnt:
                max_cnt = cnt

print(max_cnt)


