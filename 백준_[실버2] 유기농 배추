import sys
from collections import deque
input = sys.stdin.readline

t = int(input())

dy = [-1, 0, 1, 0]
dx = [0, -1, 0, 1]

cnt = 0

def bfs(graph, y, x):
    global cnt
    queue = deque()
    queue.append((y, x))
    graph[y][x] = 0

    while queue:
        y, x = queue.popleft()
        for i in range(4):
            ny = y + dy[i]
            nx = x + dx[i]

            if 0 > ny or ny >= len(graph) or 0 > nx or nx >= len(graph[0]):
                continue

            elif graph[ny][nx] == 1:
                graph[ny][nx] = 0
                queue.append((ny, nx))



for _ in range(t):
    cnt = 0
    m, n, k = map(int, input().split())
    graph = [[0] * m for _ in range(n)]
    for _ in range(k):
        a, b = map(int, input().split())
        graph[b][a] = 1

    for i in range(n):
        for j in range(m):
            if graph[i][j] == 1:
                bfs(graph, i, j)
                cnt += 1
    print(cnt)
