import heapq
import sys

input = sys.stdin.readline

n = int(input())
min_heap, max_heap = [], []

visited = [False] * 100001

for _ in range(n):
    p, l = map(int, input().split())
    heapq.heappush(min_heap, [l, p])
    heapq.heappush(max_heap, [-l, -p])
    visited[p] = True

m = int(input())
for _ in range(m):
    command = input().split()
    if command[0] == 'recommend':
        if command[1] == '1':
            while not visited[-max_heap[0][1]]:
                heapq.heappop(max_heap)
            print(-max_heap[0][1])
        else:
            while not visited[min_heap[0][1]]:
                heapq.heappop(min_heap)
            print(min_heap[0][1])

    elif command[0] == 'solved':
        visited[int(command[1])] = False

    else: # add
        p = int(command[1])
        l = int(command[2])
        while not visited[-max_heap[0][1]]:
            heapq.heappop(max_heap)
        while not visited[min_heap[0][1]]:
            heapq.heappop(min_heap)
        visited[p] = True
        heapq.heappush(max_heap, [-l, -p])
        heapq.heappush(min_heap, [l, p])