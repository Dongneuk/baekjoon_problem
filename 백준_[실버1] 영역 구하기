import sys
from collections import deque
input = sys.stdin.readline

m, n, k = map(int, input().split())
graph = [[0] * n for _ in range(m)]

for _ in range(k):
    x1, y1, x2, y2 = map(int, input().split())

    for i in range(x1, x2):
        for j in range(y1, y2):
            graph[j][i] = 1

dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]

lst = []
def bfs(i, j):
    queue = deque()
    queue.append((i, j))
    cnt = 1
    graph[i][j] = 1

    while queue:
        x, y = queue.popleft()
        for d in range(4):
            nx = x + dx[d]
            ny = y + dy[d]
            if 0 <= nx < m and 0 <= ny < n and graph[nx][ny] == 0:
                cnt += 1
                graph[nx][ny] = 1
                queue.append((nx, ny))
    lst.append(cnt)



for i in range(m):
    for j in range(n):
        if graph[i][j] == 0:
            bfs(i, j)

print(len(lst))
lst.sort()
for area in lst:
    print(area, end=' ')