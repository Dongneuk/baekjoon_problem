import sys
input = sys.stdin.readline

r, c, t = map(int ,input().split())
graph = []
for _ in range(r):
    graph.append(list(map(int, input().split())))

top, bottom = 0, 0

for i in range(r):
    if graph[i][0] == -1:
        top = i
        bottom = i+1
        break


def spread():
    dx = [-1, 1, 0, 0]
    dy = [0, 0, -1, 1]

    tmp_graph = [[0] * c for _ in range(r)]
    for i in range(r):
        for j in range(c):
            if graph[i][j] != 0 and graph[i][j] != -1:
                tmp = 0
                for d in range(4):
                    nx = i + dx[d]
                    ny = j + dy[d]

                    if 0 <= nx < r and 0 <= ny < c and graph[nx][ny] != -1:
                        tmp_graph[nx][ny] += graph[i][j] // 5
                        tmp += graph[i][j] // 5
                graph[i][j] -= tmp

    for i in range(r):
        for j in range(c):
            graph[i][j] += tmp_graph[i][j]


def circulation_top():
    dx = [0, -1, 0, 1]
    dy = [1, 0, -1, 0]
    direction = 0
    before = 0
    x, y = top, 1
    while True:
        nx = x + dx[direction]
        ny = y + dy[direction]

        if x == top and y == 0:
            break

        if nx < 0 or nx >= r or ny < 0 or ny >= c:
            direction += 1
            continue

        graph[x][y], before = before, graph[x][y]
        x = nx
        y = ny


def circulation_bottom():
    dx = [0, 1, 0, -1]
    dy = [1, 0, -1, 0]
    direction = 0
    before = 0
    x, y = bottom, 1
    while True:
        nx = x + dx[direction]
        ny = y + dy[direction]

        if x == bottom and y == 0:
            break

        if nx < 0 or nx >= r or ny < 0 or ny >= c:
            direction += 1
            continue

        graph[x][y], before = before, graph[x][y]
        x = nx
        y = ny


for _ in range(t):
    spread()
    circulation_top()
    circulation_bottom()

answer = 0
for i in range(r):
    for j in range(c):
        if graph[i][j] > 0:
            answer += graph[i][j]

print(answer)