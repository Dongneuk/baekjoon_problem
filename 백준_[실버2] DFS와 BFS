from collections import deque

n, m, v = map(int, input().split())

graph = [[] for _ in range(n + 1)]

for _ in range(m):
    a, b = map(int, input().split())
    graph[a].append(b)
    graph[b].append(a)

# 순차 방문을 위한 그래프 정렬
for i in range(len(graph)):
    graph[i].sort()

visited = [False] * (n + 1)
answer = []


def dfs(start):
    answer.append(start)
    visited[start] = True

    for i in graph[start]:
        if not visited[i]:
            visited[i] = True
            dfs(i)


dfs(v)
for a in answer:
    print(a, end=' ')


print('')
visited = [False] * (n + 1)
answer = []


def bfs(start):
    queue = deque()
    queue.append(start)
    visited[start] = True

    while queue:
        now = queue.popleft()
        answer.append(now)

        for i in graph[now]:
            if not visited[i]:
                visited[i] = True
                queue.append(i)


bfs(v)
for a in answer:
    print(a, end=' ')   