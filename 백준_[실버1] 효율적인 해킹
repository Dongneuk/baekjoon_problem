import sys
from collections import deque
input = sys.stdin.readline

n, m = map(int, input().split())

graph = [[] for _ in range(n+1)]
for _ in range(m):
    a, b = map(int, input().split())

    graph[b].append(a)

cnt_list = [0] * (n+1)


def bfs(start):

    queue = deque()
    queue.append(start)
    visited = [False] * (n+1)
    visited[start] = True


    while queue:
        global cnt
        now = queue.popleft()
        for i in graph[now]:
            if not visited[i]:
                cnt += 1
                visited[i] = True
                queue.append(i)
        

cnt = 1
for i in range(1, n+1):
    bfs(i)
    cnt_list[i] = cnt
    cnt = 1

# 인덱스별 해킹 가능 갯수 리스트.

max_cnt = max(cnt_list)
for i, v in enumerate(cnt_list):
    if v == max_cnt:
        print(i)

