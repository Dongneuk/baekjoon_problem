from collections import deque

n, m = map(int, input().split())

graph = []

for _ in range(n):
    graph.append(list(map(int, input())))

dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]
visited = [[False] * m for _ in range(n)]


def bfs(x, y):
    global cnt
    visited[x][y] = True
    queue = deque()
    queue.append((x, y))

    while queue:
        a, b = queue.popleft()

        for i in range(4):
            nx = a + dx[i]
            ny = b + dy[i]

            if nx < 0 or nx >= len(graph) or ny < 0 or ny >= len(graph[0]):
                continue

            if graph[nx][ny] == 1:
                if not visited[nx][ny]:
                    visited[nx][ny] = visited[a][b] + 1
                    queue.append((nx, ny))


cnt = 0
bfs(0, 0)
print(visited[-1][-1])