import sys
from collections import deque

input = sys.stdin.readline

n = int(input())
k = int(input())
graph = [[0] * n for _ in range(n)]

direction_dict = {}


# 2: 사과의 위치
for _ in range(k):
    a, b = map(int, input().split())
    graph[a - 1][b - 1] = 2

# 뱀이 처음에 오른쪽을 보고 있다.
direction = 0

l = int(input())
for _ in range(l):
    x, c = input().split()
    direction_dict[int(x)] = c

# 동 남 서 북
dx = [0, 1, 0, -1]
dy = [1, 0, -1, 0]

time = 0

# 뱀의 위치
queue = deque()
x, y = 0, 0
queue.append((x, y))


def turn(alpha):
    global direction
    if alpha == 'L':
        direction = (direction - 1) % 4

    else:
        direction = (direction + 1) % 4


while True:
    time += 1
    x += dx[direction]
    y += dy[direction]

    if x < 0 or x >= n or y < 0 or y >= n:
        break

    if graph[x][y] == 2:
        queue.append((x, y))
        graph[x][y] = 1
        if time in direction_dict:
            turn(direction_dict[time])

    elif graph[x][y] == 0:
        queue.append((x, y))
        graph[x][y] = 1
        tx, ty = queue.popleft()
        graph[tx][ty] = 0
        if time in direction_dict:
            turn(direction_dict[time])

    else:
        break

print(time)