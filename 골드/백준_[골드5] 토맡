
import sys
from collections import deque

# 가로, 세로
m, n = map(int, input().split())

# 토마토 밭 그래프 표현
graph = []
for _ in range(n):
    graph.append(list(map(int, input().split())))

queue = deque()
dx = [-1, 0, 1, 0]
dy = [0, 1, 0, -1]

for i in range(n):
    for j in range(m):
        if graph[i][j] == 1:
            queue.append((i, j))


def bfs():
    while queue:
        x, y = queue.popleft()
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]

            if 0 <= nx < n and 0 <= ny < m and graph[nx][ny] == 0:
                graph[nx][ny] = graph[x][y] + 1
                queue.append((nx, ny))

bfs()
answer = 0


for i in graph:
    for j in i:
        if j == 0:
            print(0)
            break
    answer = max(answer, max(i))
print(answer-1)


