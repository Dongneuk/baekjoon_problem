import sys
import copy

input = sys.stdin.readline

n, m = map(int, input().split())
graph = []

for _ in range(n):
    graph.append(list(map(int, input().split())))

direction = {
    1: [[0], [1], [2], [3]],
    2: [[0, 2], [1, 3]],
    3: [[0, 1], [1, 2], [2, 3], [3, 0]],
    4: [[0, 1, 2], [1, 2, 3], [2, 3, 0], [3, 0, 1]],
    5: [[0, 1, 2, 3]]
}

dx = [-1, 0, 1, 0]
dy = [0, 1, 0, -1]


def watch(x, y, direction, tmp):
    for d in direction:
        nx = x
        ny = y
        while True:
            nx += dx[d]
            ny += dy[d]
            if nx < 0 or nx >= n or ny < 0 or ny >= m or tmp[nx][ny] == 6:
                break
            elif tmp[nx][ny] == 0:
                tmp[nx][ny] = 7


answer = 1e9


def dfs(n, graph):
    global answer
    tmp = copy.deepcopy(graph)

    if n == len(cctv):
        cnt = 0
        for t in tmp:
            cnt += t.count(0)
        answer = min(answer, cnt)
        return

    x, y, c = cctv[n]
    for d in direction[c]:
        watch(x, y, d, tmp)
        dfs(n + 1, tmp)
        tmp = copy.deepcopy(graph)


cctv = []
#  CCTV 찾기
for i in range(n):
    for j in range(m):
        if graph[i][j] != 0 and graph[i][j] != 6:
            cctv.append([i, j, graph[i][j]])  # x 위치, y 위치, cctv 종류

dfs(0, graph)
print(answer)
