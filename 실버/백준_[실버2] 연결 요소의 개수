import sys
from collections import deque
sys.setrecursionlimit(10000)
input = sys.stdin.readline

## 정점 개수 n, 간선 개수 m
n, m =map(int, input().split())

## 간선의 개수만큼 graph에 추가해준다.
graph = [[] for _ in range(n+1)]
for _ in range(m):
    a, b = map(int, input().split())
    graph[a].append(b)
    graph[b].append(a)

## 방문 지점 체크
visited = [False] * (n+1)


def dfs(v):
    visited[v] = True
    for i in graph[v]:
        if not visited[i]:
            dfs(i)
            visited[i] = True

def bfs(start):
    visited[start] = True
    queue = deque([start])

    while queue:
        v = queue.popleft()
        for i in graph[v]:
            if not visited[i]:
                visited[i] = True
                queue.append(i)



cnt = 0
for j in range(1, n+1):
    if not visited[j]:
        cnt += 1
        bfs(j)
print(cnt)


## dfs와 bfs 활용.